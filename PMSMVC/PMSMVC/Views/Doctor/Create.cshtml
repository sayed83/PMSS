@model PMSMVC.Models.Doctor

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    List<SelectListItem> Gender = new List<SelectListItem>();
    Gender.Add(new SelectListItem
    {
        Text = "Male",
        Value = "Male"
    });
    Gender.Add(new SelectListItem
    {
        Text = "Female",
        Value = "Female"
    });
    Gender.Add(new SelectListItem
    {
        Text = "Others",
        Value = "Others"
    });
}

@section CustomJS
{
    <script>

        $(document).ready(function () {
            $('#imageFile').on('change', BindImage);        

        });

        function AjaxPost(formData) {
            var ajaxConfig = {
                type: "POST",
                url: "/Doctor/Create",
                data: new FormData(formData),
                success: function (result) {
                    $('#processImage').attr('src', '/Content/images/man.jpg');
                    $('#DoctorForm').trigger("reset");//form reset after submiting
                    $('#show-success').slideDown();
                }
            }
            if ($(formData).attr('enctype') == "multipart/form-data") {
                ajaxConfig["contentType"] = false;
                ajaxConfig["processData"] = false;
            }
            $.ajax(ajaxConfig);
            return false;
        }

        function BindImage(e) {
            var file = e.originalEvent.target.files[0];
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function (evt) {
                $('#processImage').attr('src', ' ');
                $('#processImage').attr('src', evt.target.result);
            };
        }

                       
    </script>    
}

<form id="DoctorForm" method="post" enctype="multipart/form-data" onsubmit="return AjaxPost(this);">
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Doctor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.DoctorName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DoctorName, new { htmlAttributes = new { @class = "form-control", @id = "DoctorName" } })
                        @Html.ValidationMessageFor(model => model.DoctorName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Gender, Gender,  new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control", @id = "ContactNumber" } })
                        @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @type="date", @class = "form-control", @id = "Dob" } })
                        @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "Address" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @id = "City" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", @id = "ZipCode" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.QualificationID, "QualificationID", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("QualificationID", null, htmlAttributes: new { @class = "form-control", @id = "QualificationID" })
                        @Html.ValidationMessageFor(model => model.QualificationID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SpecialityID, "SpecialityID", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("SpecialityID", null, htmlAttributes: new { @class = "form-control", @id = "SpecialityID" })
                        @Html.ValidationMessageFor(model => model.SpecialityID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @type = "date", @class = "form-control", @id = "JoiningDate" } })
                        @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddeddDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AddeddDate, new { htmlAttributes = new { @type = "date", @class = "form-control", @id = "AddeddDate" } })
                        @Html.ValidationMessageFor(model => model.AddeddDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive, new { @id = "IsActive" })
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button class="btn btn-default">Create</button>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">

                    <div class="col-md-12">
                        <img src="/Content/images/man.jpg" id="processImage" class="process-image img-responsive" />
                        <div class="upload-box">
                            <input id="imageFile" name="ImageUpload" type="file" accept="image/jpeg, image/png" alt="Photo" class="image-file" />
                            <div class="upload-icon">
                                <i class="menu-icon fa fa-upload"></i> Upload
                            </div>
                        </div>
                    </div>


                </div>
            </div>

        </div>
    </div>
</form>

<div id="show-success" class="success-save alert alert-block alert-success">
    <button type="button" class="close" data-dismiss="alert">
        <i class="ace-icon fa fa-times"></i>
    </button>

    <p>
        <strong>
            <i class="ace-icon fa fa-check"></i>
            Well done!
        </strong>
        Doctor Save successfully!
    </p>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

